---
import { getCollection } from "astro:content";
import { format } from "date-fns";
import { ArrowLeft, ExternalLink } from "lucide-preact";

import Footer from "~/components/Footer.astro";
import Head from "~/components/Head.astro";
import Hero from "~/components/Hero.astro";
import { SITE_TITLE } from "~/constants";
import Document from "~/layouts/Document.astro";
import { loadIcon } from "~/utils/icon";

const projects = await getCollection("projects").then((projects) =>
  projects
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
    .map(({ data }) => data),
);

const statusConfig = {
  production: { label: 'Production', color: 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/20 dark:text-emerald-400' },
  development: { label: 'In Development', color: 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400' },
  maintenance: { label: 'Maintenance', color: 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400' },
  idea: { label: 'Idea', color: 'bg-purple-100 text-purple-800 dark:bg-purple-900/20 dark:text-purple-400' },
  archived: { label: 'Archived', color: 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400' }
};
---

<Head title={`${SITE_TITLE} â”€ projects`} />

<Document>
  <main
    class="flex flex-col h-full mx-auto max-w-4xl px-4 sm:px-6 lg:px-8 py-16 space-y-10 pb-8"
  >
    <Hero pageDescription="A collection of projects I've worked on, ranging from ideas to production applications." />

    <div class="z-10">
      <div class="space-y-8">

        <div class="space-y-4">
          {projects.map(async (project) => {
            const Icon = await loadIcon(project.icon);
            const hasUrl = !!project.url;
            const status = project.status || 'development';
            const statusInfo = statusConfig[status];
            const Component = hasUrl ? "a" : "div";

            return (
              <div class="py-2">
                <Component
                  href={project.url}
                  target={hasUrl ? "_blank" : undefined}
                  rel={hasUrl ? "noopener noreferrer" : undefined}
                  class={hasUrl ? "block" : ""}
                >
                  <div class="flex items-start gap-3 mb-1">
                    <div class="flex-shrink-0 mt-0.5">
                      <Icon class="w-5 h-5 text-gray-600 dark:text-gray-400" />
                    </div>
                    <div class="flex-1 min-w-0">
                      <div class="flex items-start justify-between gap-4">
                        <div class="flex-1">
                          <div class="flex items-start justify-between gap-4 mb-1">
                            <div class="flex items-center gap-2">
                              <h3 class={`text-base font-medium text-gray-900 dark:text-gray-100 ${hasUrl ? 'hover:text-primary-500 dark:hover:text-primary-400 decoration-[0.1em] underline-offset-4 hover:underline hover:decoration-wavy hover:decoration-primary-500 dark:hover:decoration-primary-400 transition-colors' : ''}`}>
                                {project.title}
                              </h3>
                              {hasUrl && (
                                <ExternalLink class="w-3 h-3 text-gray-400 dark:text-gray-500" />
                              )}
                              <span class={`inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium ${statusInfo.color}`}>
                                {statusInfo.label}
                              </span>
                            </div>
                            <div class="flex items-center text-xs text-gray-500 dark:text-gray-500 flex-shrink-0">
                              {format(new Date(project.date), "MMM yyyy")}
                            </div>
                          </div>
                          {project.description && (
                            <p class="text-gray-600 dark:text-gray-400 text-sm mb-2 line-clamp-2">
                              {project.description}
                            </p>
                          )}
                        </div>
                      </div>
                    </div>
                  </div>
                </Component>
              </div>
            );
          })}
        </div>

        {projects.length === 0 && (
          <div class="text-center py-12">
            <p class="text-gray-500 dark:text-gray-400">
              No projects yet. Check back soon for updates!
            </p>
          </div>
        )}
      </div>
    </div>
  </main>

  <Footer class="max-w-4xl">
    <div
      class="flex items-center justify-center mt-4 md:block md:order-1 md:mt-0"
    >
      <a
        class="default-focus default-transition group inline-flex items-center justify-center space-x-2 rounded-md px-3 py-1 text-sm font-semibold text-gray-700 bg-white hover:bg-gray-50 dark:bg-gray-950 dark:hover:bg-gray-900 border border-gray-200 hover:border-gray-300 dark:border-gray-900 dark:hover:border-gray-800 hover:text-gray-900 dark:text-zinc-200 dark:hover:text-zinc-200"
        href="/"
      >
        <ArrowLeft
          class="w-4 h-4 default-transition transform group-hover:-translate-x-1 group-hover:text-gray-900 dark:group-hover:text-zinc-200"
        />
        <span>Go back</span>
      </a>
    </div>
  </Footer>
</Document>